name: 'meson'
description: 'handle steps for meson setup/build/test/install/dist'
inputs:
  actions:
    description: 'meson action to perform'
    type: 'string'
    default: 'prefetch setup compile'
  projectdir:
    description: 'meson project root directory'
    type: 'string'
    default: '.'
  builddir:
    description: 'meson build directory'
    type: 'string'
    default: 'builddir'
  cross_files:
    description: 'cross file(s) to use'
    type: 'string'
    default: ''
  options:
    description: 'meson option to give at setup (with -D prefix)'
    type: 'string'
    default: ''
  coverage:
    description: 'build coverage reports'
    type: 'boolean'
    default: false
  targets:
    description: 'target to build'
    type: 'string'
    default: ''
  shell:
    description: 'shell to use'
    type: 'string'
    default: 'bash'

runs:
  using: 'composite'
  steps:
    - name: 'Meson Prefetch'
      if: ${{ contains(fromJSON(inputs.actions), 'prefetch') }}
      working-directory: ${{ inputs.projectdir }}
      shell: ${{ input.shell }}
      run: |
        meson subprojects download || true
        meson subprojects foreach python3 -m pip install -r requirements.txt || true

    - name: 'Meson Setup'
      if: ${{ contains(fromJSON(inputs.actions), 'setup') }}
      working-directory: ${{ inputs.projectdir }}
      shell: ${{ input.shell }}
      run: |
        CROSS_FILES=
        for f in ${{ inputs.cross_files }}; do
          CROSS_FILES+=" --cross-file ${f} "
        done
        meson setup ${{ inputs.options }} ${CROSS_FILES} ${{ inputs.builddir }}

    - name: 'Meson Compile'
      if: ${{ contains(fromJSON(inputs.actions), 'compile') }}
      working-directory: ${{ format('{0}/{1}', inputs.projectdir, inputs.builddir) }}
      shell: ${{ input.shell }}
      run: |
        ninja ${{ inputs.targets }}

    - name: 'Meson Test'
      if: ${{ contains(fromJSON(inputs.actions), 'test') }}
      working-directory: ${{ format('{0}/{1}', inputs.projectdir, inputs.builddir) }}
      shell: ${{ input.shell }}
      run: |
        ninja test

    - name: 'Meson Coverage Report'
      if: ${{ contains(fromJSON(inputs.actions), 'test') && inputs.coverage == 'true' }}
      working-directory: ${{ format('{0}/{1}', inputs.projectdir, inputs.builddir) }}
      shell: ${{ input.shell }}
      run: |
        ninja coverage

    - name: 'Meson Install'
      if: ${{ contains(fromJSON(inputs.actions), 'install') }}
      working-directory: ${{ format('{0}/{1}', inputs.projectdir, inputs.builddir) }}
      shell: ${{ input.shell }}
      run: |
        ninja install

    - name: 'Meson Dist'
      if: ${{ contains(fromJSON(inputs.actions), 'dist') }}
      working-directory: ${{ format('{0}/{1}', inputs.projectdir, inputs.builddir) }}
      shell: ${{ input.shell }}
      run: |
        meson dist --no-tests --include-subprojects
